version: '3.8'

services:
  lapis:
    container_name: opsapi
    build: .
    ports:
      - "4010:8080"
    volumes:
      - .:/app
    env_file: ".env"
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.12

  postgres:
    container_name: opsapi-postgres
    image: postgres:16
    ports:
      - "5439:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: opsapi
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.10

  mariadb:
    container_name: webimpetus-mariadb
    image: mariadb
    ports:
      - "3319:3306"
    environment:
      MYSQL_ROOT_PASSWORD: msroot
      MYSQL_DATABASE: opsapi
      MYSQL_USER: msuser
      MYSQL_PASSWORD: mspassword
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.11

  adminer:
    image: adminer:latest
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: mariadb
    ports:
      - 7779:8080
    networks:
      opsapi-network:


  redis:
    image: redis:alpine
    container_name: opsapi-redis
    ports:
      - "6373:6379"
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.13
    volumes:
      - ./session-data:/data
    command: ["redis-server", "--appendonly", "yes"]

# Add Keycloak service
  keycloak:
    container_name: ops_keycloak
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # KEYCLOAK_IMPORT: /opt/keycloak/import/realm-config.json
    ports:
      - "1010:8080"
    depends_on:
      - postgres
    volumes:
      - ./keycloak_data:/opt/keycloak/data
    networks:
      opsapi-network:

  nodeapp:
    container_name: opsapi-node
    build:
      context: ../node/opsapi-node
    ports:
      - "4011:3000"  # Host port : container port (adjust as needed)
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.14
    volumes:
      - ../node/opsapi-node:/usr/src/app
    env_file: "../node/opsapi-node/.env"

  frontend:
    container_name: opsapi-ecommerce
    build:
      context: ../opsapi-ecommerce/opsapi-ecommerce
      dockerfile: Dockerfile.dev
    ports:
      - "3033:3000"
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.15
    volumes:
      - ../opsapi-ecommerce/opsapi-ecommerce:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://127.0.0.1:4010
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      - lapis

networks:
  opsapi-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.71.0.0/16
          gateway: 172.71.0.1
