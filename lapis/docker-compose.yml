# version: '3.9'

services:
  lapis:
    container_name: opsapi
    build: .
    ports:
      - "4010:80"
      - "8081:8081"
    volumes:
      - .:/app
    env_file: ".env"
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.12

  postgres:
    container_name: opsapi-postgres
    image: postgres:14-alpine
    ports:
      - "5439:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: pguser
      POSTGRES_PASSWORD: pgpassword
      POSTGRES_DB: opsapi
    command: ["postgres", "-c", "max_connections=200"]
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.10

  mariadb:
    container_name: webimpetus-mariadb
    image: mariadb
    ports:
      - "3319:3306"
    environment:
      MYSQL_ROOT_PASSWORD: msroot
      MYSQL_DATABASE: opsapi
      MYSQL_USER: msuser
      MYSQL_PASSWORD: mspassword
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.11

  adminer:
    image: adminer:latest
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - 7779:8080
    networks:
      opsapi-network:


  redis:
    image: redis:alpine
    container_name: opsapi-redis
    ports:
      - "6373:6379"
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.13
    volumes:
      - ./session-data:/data
    command: ["redis-server", "--appendonly", "yes"]

# Add Keycloak service
  keycloak:
    container_name: ops_keycloak
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      # KEYCLOAK_IMPORT: /opt/keycloak/import/realm-config.json
    ports:
      - "1010:8080"
    depends_on:
      - postgres
    volumes:
      - ./keycloak_data:/opt/keycloak/data
    networks:
      opsapi-network:



  # nodeapp:
  #   container_name: opsapi-node
  #   build:
  #     context: ../node/opsapi-node
  #   ports:
  #     - "4011:3000"  # Host port : container port (adjust as needed)
  #   networks:
  #     opsapi-network:
  #       ipv4_address: 172.71.0.14
  #   volumes:
  #     - ../node/opsapi-node:/usr/src/app
  #   env_file: "../node/opsapi-node/.env"

  # Prometheus - Metrics collection and alerting
  prometheus:
    image: prom/prometheus:latest
    container_name: opsapi-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../devops/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../devops/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.15
    depends_on:
      - lapis

  # loki:
  #     image: grafana/loki:2.8.2
  #     container_name: opsapi-loki
  #     ports:
  #       - "3100:3100"
  #     command: -config.file=/etc/loki/local-config.yaml
  #     volumes:
  #       - ./loki_data:/loki
  #       - ../devops/loki-config.yaml:/etc/loki/local-config.yaml
  #     networks:
  #       opsapi-network:
  #         ipv4_address: 172.71.0.9

  # Grafana - Metrics visualization and dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: opsapi-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../devops/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ../devops/grafana-dashboards-provisioning.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ../devops/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/opsapi-dashboard.json
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_INSTALL_PLUGINS=
    networks:
      opsapi-network:
        ipv4_address: 172.71.0.16
    depends_on:
      - prometheus

networks:
  opsapi-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.71.0.0/16
          gateway: 172.71.0.1

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: