env KEYCLOAK_AUTH_URL;
env KEYCLOAK_TOKEN_URL;
env KEYCLOAK_USERINFO_URL;
env KEYCLOAK_CLIENT_ID;
env KEYCLOAK_CLIENT_SECRET;
env KEYCLOAK_REDIRECT_URI;
env DB_HOST;
env DB_USER;
env DB_PASSWORD;
env DATABASE;
worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include mime.types;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for" "$host"';

    log_format sslparams '$remote_addr - $remote_user [$time_local] "$request" $status '
              '$body_bytes_sent "$http_referer" "$http_user_agent" '
              '"$http_x_forwarded_for" $request_id $msec $request_time '
              '$upstream_connect_time $upstream_header_time $upstream_response_time $host $ssl_protocol $ssl_cipher';

  init_by_lua_block {
    require "lpeg"
    require "resty.session".init({
      remember = true,
      store_metadata = true,
      cookie_name = "session",
      secret = "RaJKp8UQW1",
      secret_fallbacks = {
        "X88FuG1AkY",
        "fxWNymIpbb",
      },
    })
  }

  #resolver 127.0.0.11 ipv6=off;  # for docker use this resolver
  resolver 10.43.0.10 ipv6=off; # for kubernetes use this resolver can also try kube-dns.kube-system.svc.cluster.local if you do not know the IP
  server {
    set $session_name nginx_session;
    set $session_secret 623q4hR325t36VsCD3g567922IC0073T;
    set $session_cookie_samesite Strict;
    
    listen ${{PORT}};
    lua_code_cache ${{CODE_CACHE}};

    location / {
      default_type text/html;
      content_by_lua_block {
        require("lapis").serve("app")
      }
    }

    location /static/ {
      alias static/;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }
  }
}
