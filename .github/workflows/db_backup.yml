name: Daily PostgreSQL Backup

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  backup:
    runs-on: whisky03

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check and Install kubectl
        run: |
          if ! command -v kubectl &> /dev/null; then
            echo "kubectl not found. Installing kubectl..."
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          else
            echo "kubectl is already installed."
          fi
        shell: bash

      - name: Configure kubectl
        env:
          KUBECONFIG_BASE64: ${{ secrets.KUBE_CONFIG_DATA_K3S }}
        run: |
          echo "$KUBECONFIG_BASE64" | base64 -d > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          echo "Kubeconfig decoded and exported successfully."

      - name: Retrieve PostgreSQL Credentials from Kubernetes
        run: |
          export KUBECONFIG=$(pwd)/kubeconfig
          export PGHOST=$(kubectl get secret postgres-secret -o jsonpath="{.data.DB_HOST}" | base64 --decode)
          export PGPORT=$(kubectl get secret postgres-secret -o jsonpath="{.data.DB_PORT}" | base64 --decode)
          export PGUSER=$(kubectl get secret postgres-secret -o jsonpath="{.data.DB_USER}" | base64 --decode)
          export PGPASSWORD=$(kubectl get secret postgres-secret -o jsonpath="{.data.DB_PASSWORD}" | base64 --decode)
          export PGDATABASE=$(kubectl get secret postgres-secret -o jsonpath="{.data.DATABASE}" | base64 --decode)

          echo "PGHOST=$PGHOST" >> $GITHUB_ENV
          echo "PGPORT=$PGPORT" >> $GITHUB_ENV
          echo "PGUSER=$PGUSER" >> $GITHUB_ENV
          echo "PGPASSWORD=$PGPASSWORD" >> $GITHUB_ENV
          echo "PGDATABASE=$PGDATABASE" >> $GITHUB_ENV

      - name: Install PostgreSQL Client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Dump PostgreSQL Database
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          BACKUP_FILE="backup_$TIMESTAMP.sql"
          pg_dump -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -d "$PGDATABASE" -F c -f "$BACKUP_FILE"
          echo "BACKUP_FILE=$BACKUP_FILE" >> $GITHUB_ENV

      - name: Install MinIO Client (mc)
        run: |
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/

      - name: Configure MinIO Client
        run: |
          mc alias set myminio ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}

      - name: Upload Backup to MinIO
        run: |
          mc cp "$BACKUP_FILE" myminio/${{ secrets.MINIO_BUCKET }}/"$BACKUP_FILE"

      - name: Cleanup Backup File
        run: rm -f "$BACKUP_FILE"
