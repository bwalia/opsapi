apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "stat -c %a /tmp && ls -la /tmp && cp /tmp/configmap/bootstrap-nginx.sh /usr/local/bin/bootstrap-nginx.sh && chmod +x /usr/local/bin/bootstrap-nginx.sh && /bin/sh /usr/local/bin/bootstrap-nginx.sh"]
          volumeMounts:
            - name: {{ .Release.Name }}-cm-{{ .Release.Namespace }}-vol
              mountPath: /tmp/configmap
            - name: {{ .Release.Name }}-vol-{{ .Release.Namespace }}
              mountPath: /tmp/secrets
          ports:
            - containerPort: 80
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "curl -f -s http://localhost:80/health || [ $(curl -s -o /dev/null -w '%{http_code}' http://localhost:80/health) -eq 401 ]"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "curl -f -s http://localhost:80/ready || [ $(curl -s -o /dev/null -w '%{http_code}' http://localhost:80/ready) -eq 401 ]"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          env:
            - name: KEYCLOAK_AUTH_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: KEYCLOAK_AUTH_URL
            - name: KEYCLOAK_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: KEYCLOAK_TOKEN_URL
            - name: KEYCLOAK_USERINFO_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: KEYCLOAK_USERINFO_URL
            - name: KEYCLOAK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: KEYCLOAK_CLIENT_ID
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: KEYCLOAK_CLIENT_SECRET
            - name: KEYCLOAK_REDIRECT_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: KEYCLOAK_REDIRECT_URI
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: JWT_SECRET_KEY
            - name: OPENSSL_SECRET_IV
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: OPENSSL_SECRET_IV
            - name: OPENSSL_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: OPENSSL_SECRET_KEY
            - name: MINIO_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_ENDPOINT
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_SECRET_KEY
            - name: MINIO_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_BUCKET
            - name: MINIO_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: MINIO_REGION
            - name: NODE_API_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: NODE_API_URL
      volumes:
        - name: {{ .Release.Name }}-cm-{{ .Release.Namespace }}-vol
          configMap:
            name: {{ .Release.Name }}-cm-{{ .Release.Namespace }}
        - name: {{ .Release.Name }}-vol-{{ .Release.Namespace }}
          secret:
            secretName: "{{ .Release.Name }}-secrets"
            items:
            - key: LAPIS_CONFIG_LUA_FILE
              path: config.lua
