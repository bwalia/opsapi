---
# Source: opsapi/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opsapi-{{ .Release.Namespace }}-db-backup-hourly
spec:
  schedule: "*/1 * * * *"
  #testing 1 min "0 */1 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: "opsapi-db-backup-{{ .Release.Namespace }}-hourly"
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command: ["/bin/sh", "-c"]
              args:
                - |
                  TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
                  BACKUP_FILE="backup_$TIMESTAMP.sql.gz"

                  pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DATABASE" -F c | gzip > "/tmp/$BACKUP_FILE"

                  # Configure MinIO and upload backup
                  mc alias set myminio "$MINIO_ENDPOINT" "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY"
                  mc cp "/tmp/$BACKUP_FILE" myminio/"$MINIO_BUCKET"/"$BACKUP_FILE"

                  # Cleanup
                  rm -f "/tmp/$BACKUP_FILE"
              volumeMounts:
                - name: {{ .Release.Name }}-backup-script
                  mountPath: /scripts
                  readOnly: true
                - name: {{ .Release.Name }}-backup-storage
                  mountPath: /backup
          volumes:
            - name: {{ .Release.Name }}-backup-script
              configMap:
                name: {{ .Release.Name }}-pg-backup-{{ .Release.Namespace }}
                defaultMode: 0777  # Make it executable
            - name: {{ .Release.Name }}-backup-storage
              emptyDir: {}
      backoffLimit: 0
---
# Source: opsapi/templates/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: opsapi-{{ .Release.Namespace }}-db-backup-daily
spec:
  schedule: "0 4 * * *"
  #testing 1 min "0 */1 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: opsapi-db-backup-{{ .Release.Namespace }}-daily
              image: "{{ .Values.targetImage }}:{{ .Values.targetImageTag }}"
              imagePullPolicy: Always
              command: ["/bin/sh", "-c"]
              args:
                - |
                  TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
                  BACKUP_FILE="backup_$TIMESTAMP.sql.gz"

                  pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DATABASE" -F c | gzip > "/tmp/$BACKUP_FILE"

                  # Configure MinIO and upload backup
                  mc alias set myminio "$MINIO_ENDPOINT" "$MINIO_ACCESS_KEY" "$MINIO_SECRET_KEY"
                  mc cp "/tmp/$BACKUP_FILE" myminio/"$MINIO_BUCKET"/"$BACKUP_FILE"

                  # Cleanup
                  rm -f "/tmp/$BACKUP_FILE"
              volumeMounts:
                - name: {{ .Release.Name }}-backup-script
                  mountPath: /scripts
                  readOnly: true
                - name: {{ .Release.Name }}-backup-storage
                  mountPath: /backup
          volumes:
            - name: {{ .Release.Name }}-backup-script
              configMap:
                name: {{ .Release.Name }}-pg-backup-{{ .Release.Namespace }}
                defaultMode: 0777  # Make it executable
            - name: {{ .Release.Name }}-backup-storage
              emptyDir: {}
      backoffLimit: 0
